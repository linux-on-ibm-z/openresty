sudo: required
dist: xenial

os: linux
arch: s390x

language: c

compiler:
  - gcc
 # - clang

addons:
  apt:
    packages:
    - axel
    - dos2unix
    - cpanminus
    - libgd-dev
    - libpcre3
    - libpcre3-dev
    - mercurial
    - libpq-dev

cache:
  directories:
  - download-cache

env:
  global:
    - JOBS=3
    - PCRE_VER=8.41
    - PCRE_PREFIX=/opt/pcre
    - PCRE_LIB=$PCRE_PREFIX/lib
    - PCRE_INC=$PCRE_PREFIX/include
    - OPENSSL_PREFIX=/opt/ssl
    - OPENSSL_LIB=$OPENSSL_PREFIX/lib
    - OPENSSL_INC=$OPENSSL_PREFIX/include
    - OPENRESTY_PREFIX=/opt/openresty
  matrix:
#    - OPENSSL_VER=1.0.2q OPENSSL_PATCH_VER=1.0.2h
#    - OPENSSL_VER=1.1.0j OPENSSL_PATCH_VER=1.1.0d
    - OPENSSL_VER=1.1.1c OPENSSL_PATCH_VER=1.1.1c
#     - OPENSSL_VER=1.1.1d OPENSSL_PATCH_VER=1.1.1d


install:
  - sudo cpanm --notest Test::Nginx IPC::Run3 > build.log 2>&1 || (cat build.log && exit 1)
#  - if [ ! -f download-cache/pcre-$PCRE_VER.tar.gz ]; then wget -P download-cache http://ftp.cs.stanford.edu/pub/exim/pcre/pcre-$PCRE_VER.tar.gz; fi
  - if [ ! -f download-cache/openssl-$OPENSSL_VER.tar.gz ]; then wget -P download-cache https://www.openssl.org/source/openssl-$OPENSSL_VER.tar.gz; fi
#  - tar zxf download-cache/pcre-$PCRE_VER.tar.gz
#  - cd pcre-$PCRE_VER/
#  - ./configure --prefix=$PCRE_PREFIX --enable-jit --enable-utf --enable-unicode-properties > build.log 2>&1 || (cat build.log && exit 1)
#  - make -j$JOBS > build.log 2>&1 || (cat build.log && exit 1)
#  - sudo PATH=$PATH make install > build.log 2>&1 || (cat build.log && exit 1)
#  - cd ..
  - tar zxf download-cache/openssl-$OPENSSL_VER.tar.gz
  - cd openssl-$OPENSSL_VER/
  - patch -p1 < ../patches/openssl-$OPENSSL_PATCH_VER-sess_set_get_cb_yield.patch
  - ./config no-threads shared enable-ssl3 enable-ssl3-method -g --prefix=$OPENSSL_PREFIX -DPURIFY #> build.log 2>&1 || (cat build.log && exit 1)
  - make #-j$JOBS > build.log 2>&1 || (cat build.log && exit 1)
  - sudo make PATH=$PATH install_sw #> build.log 2>&1 || (cat build.log && exit 1)
  - cd ..
  - sudo ln -s /usr/bin/make /usr/bin/gmake

script:
  - util/mirror-tarballs > build.log 2>&1 || (cat build.log && exit 1)
  - cd openresty-*
  - sed -i '733,776s/.*/#&/' configure
  - sed -i '723s/.*/#&/' configure
  - sed -i '708,717s/.*/#&/' configure
  - cat configure
  - ./configure --prefix=$OPENRESTY_PREFIX --with-cc-opt="-I$PCRE_INC -I$OPENSSL_INC" --with-ld-opt="-L$PCRE_LIB -L$OPENSSL_LIB -Wl,-rpath,$PCRE_LIB:$OPENSSL_LIB" --with-pcre-jit --with-http_ssl_module --with-debug -j$JOBS #> build.log 2>&1 || (cat build.log && exit 1)
  - make #-j$JOBS > build.log 2>&1 || (cat build.log && exit 1)
  - sudo make install #> build.log 2>&1 || (cat build.log && exit 1)
  - cd ..
  - export PATH=$OPENRESTY_PREFIX/bin:$OPENRESTY_PREFIX/nginx/sbin:$PATH
  - nginx -V
  - ldd `which nginx`|grep -E 'luajit|ssl|pcre'
  - sed -i "s@export LIBPQ_LIB='(/usr/lib64.*@export LIBPQ_LIB='(/usr/lib64|/usr/lib/s390x-linux-gnu|/usr/lib/postgresql10/lib64)'@" t/000-sanity.t
  - sed -i "s@export LIBPQ_INC='(?:/usr/include|.*@export LIBPQ_INC='(?:/usr/include|/usr/include/postgresql|/usr/include/pgsql)'@" t/000-sanity.t
  #- sed -i "/exec \"gcc-4\.2\"\: No such file or directory/d" t/000-sanity.t
  - sed -i "s/INFO: found -msse4.2 in cc.//" t/000-sanity.t
  - sed -i "s/WARNING: -msse4.2//" t/000-sanity.t
  - sed -i "s/ XCFLAGS='-msse4.2'//g" t/000-sanity.t
  #- sed -i "s/ -msse4.2//g" t/000-sanity.t
  - sed -i "s/-msse4.2//g" t/000-sanity.t
  #- cat t/000-sanity.t
  - prove -r t/
